-- CC-DOS v1.5 - System API

-- Variables
local build = {}

build.dosdir = "CC-DOS"
build.version = "1.5"

-- Functions

function cd(mnt,path)
    local cache = getcache("sys")
    cache.current_drive = mnt
    cache.current_path = path
    if type(utils.dosPathToUnixPath(mnt..":\\"..path)) == "string" then
        if fs.exists(utils.dosPathToUnixPath(mnt..":\\"..path)) then
            setcache("sys",cache)
        else
            print("Cannot cd/change drive, path or drive is not availible")
        end
    else
        print("Cannot cd/change drive, path or drive is not availible")
    end
end

function getcache(name)
    local file = fs.open(build.dosdir.."/cache/"..name..".dat","r")
    local cache = textutils.unserialize(file.readAll())
    file.close()
    return cache
end

function getconfig(name)
    local file = fs.open("/config.sys","r")
    local cfg = textutils.unserialize(file.readAll())
    if name == nil then
        return cfg
    else
        return cfg[name]
    end
end
os.getconfig = getconfig

function getvar(name)
    local file = fs.open(build.dosdir.."/env","r")
    local env = textutils.unserialize(file.readAll())
    file.close()
    return env[name]
end
os.getvar = getvar

function setcache(name,cache)
    local file = fs.open(build.dosdir.."/cache/"..name..".dat","w")
    file.write(textutils.serialize(cache))
    file.close()
end

function setvar(name,value)
    local file = fs.open(build.dosdir.."/env","w")
    local env = textutils.unserialize(file.readAll())
    env[name] = value
    file.write(textutils.serialize(env))
    file.close()
end
os.setvar = setvar

function resetCache(name)
    local caches = {}
    caches.sys = {}
	caches.sys.drive_type = "HDD"
    caches.sys.current_path = ""
    caches.sys.current_drive = "C"
    local file = fs.open(build.dosdir.."/cache/"..name..".dat","w")
    file.write(textutils.serialize(caches[name]))
    file.close()
end

function version()
    return "CC-DOS Version "..build.version
end
os.version = version